plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // mapstruct
    compileOnly 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok-mapstruct-binding
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    // spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // eureka client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    // Kafka
    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
    implementation 'org.springframework.kafka:spring-kafka'
    // config client
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    //  Jackson library for JSON serialization/deserialization
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    // resource server
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'



}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}