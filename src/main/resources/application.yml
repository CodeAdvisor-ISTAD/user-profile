server:
  port: 8085

spring:
  profiles:
    active: dev
  config:
    import: "configserver:"
  cloud:
    config:
      uri: http://167.172.78.79:8888
  application:
    name: user-service

  kafka:
    producer:
      bootstrap-servers:
        - 167.172.78.79:9092
        - 167.172.78.79:9093
        - 167.172.78.79:9094
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        spring.kafka.producer.value.serializer.add.type.headers: true
    consumer:
      enable-auto-commit: true
      bootstrap-servers:
        - 167.172.78.79:9092
        - 167.172.78.79:9093
        - 167.172.78.79:9094
      group-id: user-service
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
#        spring.json.value.default.type: istad.codeadvisor.userservice.config.kafka.producer.ContentProducer
        spring.json.value.default.type: istad.codeadvisor.userservice.config.kafka.producer.ReactionProducer

logging:

  level:
    org.springframework.kafka.listener: DEBUG
    org.springframework.kafka.core: DEBUG
    org:
      springframework:
        data:
          mongodb:
            core:
              MongoTemplate: DEBUG